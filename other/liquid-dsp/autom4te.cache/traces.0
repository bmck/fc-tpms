m4trace:scripts/ax_check_compile_flag.m4:72: -1- AC_DEFUN([AX_CHECK_COMPILE_FLAG], [AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl
AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [
  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS
  _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $4 $1"
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])
AS_IF([test x"AS_VAR_GET(CACHEVAR)" = xyes],
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])
m4trace:scripts/ax_ext.m4:163: -1- AC_DEFUN([AX_EXT], [
  AC_REQUIRE([AX_GCC_X86_CPUID])

  AX_GCC_X86_CPUID(0x00000001)
  ecx=`echo $ax_cv_gcc_x86_cpuid_0x00000001 | cut -d ":" -f 3`
  edx=`echo $ax_cv_gcc_x86_cpuid_0x00000001 | cut -d ":" -f 4`
 
 AC_CHECK_HEADERS(mmintrin.h xmmintrin.h emmintrin.h pmmintrin.h tmmintrin.h smmintrin.h immintrin.h)

 AC_CACHE_CHECK([whether mmx is supported], [ax_cv_have_mmx_ext],
  [
    ax_cv_have_mmx_ext=no
    if test "$((0x$edx>>23&0x01))" = 1; then
      ax_cv_have_mmx_ext=yes
    fi
  ])

 AC_CACHE_CHECK([whether sse is supported], [ax_cv_have_sse_ext],
  [
    ax_cv_have_sse_ext=no
    if test "$((0x$edx>>25&0x01))" = 1; then
      ax_cv_have_sse_ext=yes
    fi
  ])

 AC_CACHE_CHECK([whether sse2 is supported], [ax_cv_have_sse2_ext],
  [
    ax_cv_have_sse2_ext=no
    if test "$((0x$edx>>26&0x01))" = 1; then
      ax_cv_have_sse2_ext=yes
    fi
  ])

 AC_CACHE_CHECK([whether sse3 is supported], [ax_cv_have_sse3_ext],
  [
    ax_cv_have_sse3_ext=no
    if test "$((0x$ecx&0x01))" = 1; then
      ax_cv_have_sse3_ext=yes
    fi
  ])

 AC_CACHE_CHECK([whether ssse3 is supported], [ax_cv_have_ssse3_ext],
  [
    ax_cv_have_ssse3_ext=no
    if test "$((0x$ecx>>9&0x01))" = 1; then
      ax_cv_have_ssse3_ext=yes
    fi
  ])

 AC_CACHE_CHECK([whether sse4.1 is supported], [ax_cv_have_sse41_ext],
  [
    ax_cv_have_sse41_ext=no
    if test "$((0x$ecx>>19&0x01))" = 1; then
      ax_cv_have_sse41_ext=yes
    fi
  ])

 AC_CACHE_CHECK([whether sse4.2 is supported], [ax_cv_have_sse42_ext],
  [
    ax_cv_have_sse42_ext=no
    if test "$((0x$ecx>>20&0x01))" = 1; then
      ax_cv_have_sse42_ext=yes
    fi
  ])

 AC_CACHE_CHECK([whether avx is supported], [ax_cv_have_avx_ext],
  [
    ax_cv_have_avx_ext=no
    if test "$((0x$ecx>>28&0x01))" = 1; then
      ax_cv_have_avx_ext=yes
    fi
  ])

  if [ test "$ax_cv_have_mmx_ext" = yes && test "$ac_cv_header_mmintrin_h" = yes ]; then
    AC_DEFINE(HAVE_MMX,, [Support MMX instructions])
    AX_CHECK_COMPILE_FLAG(-mmmx, SIMD_FLAGS="$SIMD_FLAGS -mmmx", [])
  fi

  if [ test "$ax_cv_have_sse_ext" = yes && test "$ac_cv_header_xmmintrin_h" = yes ]; then
    AC_DEFINE(HAVE_SSE,, [Support SSE (Streaming SIMD Extensions) instructions])
    AX_CHECK_COMPILE_FLAG(-msse, SIMD_FLAGS="$SIMD_FLAGS -msse", [])
  fi

  if [ test "$ax_cv_have_sse2_ext" = yes && test "$ac_cv_header_emmintrin_h" = yes ]; then
    AC_DEFINE(HAVE_SSE2,, [Support SSE2 (Streaming SIMD Extensions 2) instructions])
    AX_CHECK_COMPILE_FLAG(-msse2, SIMD_FLAGS="$SIMD_FLAGS -msse2", [])
  fi

  if [ test "$ax_cv_have_sse3_ext" = yes && test "$ac_cv_header_pmmintrin_h" = yes ]; then
    AC_DEFINE(HAVE_SSE3,, [Support SSE3 (Streaming SIMD Extensions 3) instructions])
    AX_CHECK_COMPILE_FLAG(-msse3, SIMD_FLAGS="$SIMD_FLAGS -msse3", [])
  fi

  if [ test "$ax_cv_have_ssse3_ext" = yes && test "$ac_cv_header_tmmintrin_h" = yes ]; then
    AC_DEFINE(HAVE_SSSE3,, [Support SSSE3 (Supplemental Streaming SIMD Extensions 3) instructions])
    AX_CHECK_COMPILE_FLAG(-mssse3, SIMD_FLAGS="$SIMD_FLAGS -mssse3", [])
  fi

  if [ test "$ax_cv_have_sse41_ext" = yes && test "$ac_cv_header_smmintrin_h" = yes ]; then
    AC_DEFINE(HAVE_SSE41,, [Support SSE4.1 (Streaming SIMD Extensions 4.1) instructions])
    AX_CHECK_COMPILE_FLAG(-msse4.1, SIMD_FLAGS="$SIMD_FLAGS -msse4.1", [])
  fi

  if [ test "$ax_cv_have_sse42_ext" = yes && test "$ac_cv_header_smmintrin_h" = yes ]; then
    AC_DEFINE(HAVE_SSE42, 1,[Support SSE4.2 (Streaming SIMD Extensions 4.2) instructions])
    AX_CHECK_COMPILE_FLAG(-msse4.2, SIMD_FLAGS="$SIMD_FLAGS -msse4.2", [])
  fi

  if [ test "$ax_cv_have_avx_ext" = yes && test "$ac_cv_header_immintrin_h" = yes ]; then
    AC_DEFINE(HAVE_AVX,,[Support AVX (Advanced Vector Extensions) instructions])
    AX_CHECK_COMPILE_FLAG(-mavx, SIMD_FLAGS="$SIMD_FLAGS -mavx", [])
  fi

  AC_SUBST(SIMD_FLAGS)
])
m4trace:scripts/ax_gcc_archflag.m4:225: -1- AC_DEFUN([AX_GCC_ARCHFLAG], [AC_REQUIRE([AC_PROG_CC])
AC_REQUIRE([AC_CANONICAL_HOST])

AC_ARG_WITH(gcc-arch, [AS_HELP_STRING([--with-gcc-arch=<arch>], [use architecture <arch> for gcc -march/-mtune, instead of guessing])],
	ax_gcc_arch=$withval, ax_gcc_arch=yes)

AC_MSG_CHECKING([for gcc architecture flag])
AC_MSG_RESULT([])
AC_CACHE_VAL(ax_cv_gcc_archflag,
[
ax_cv_gcc_archflag="unknown"

if test "$GCC" = yes; then

if test "x$ax_gcc_arch" = xyes; then
ax_gcc_arch=""
if test "$cross_compiling" = no; then
case $host_cpu in
  i[[3456]]86*|x86_64*|amd64*) # use cpuid codes
     AX_GCC_X86_CPUID(0)
     AX_GCC_X86_CPUID(1)
     case $ax_cv_gcc_x86_cpuid_0 in
       *:756e6547:*:*) # Intel
          case $ax_cv_gcc_x86_cpuid_1 in
	    *5[[48]]?:*:*:*) ax_gcc_arch="pentium-mmx pentium" ;;
	    *5??:*:*:*) ax_gcc_arch=pentium ;;
	    *1?6[[7d]]?:*:*:*) ax_gcc_arch="penryn core2 pentium-m pentium3 pentiumpro" ;;
	    *1?6[[aef]]?:*:*:*|*2?6[[5cef]]?:*:*:*) ax_gcc_arch="corei7 core2 pentium-m pentium3 pentiumpro" ;;
	    *1?6c?:*:*:*|*[[23]]?66?:*:*:*) ax_gcc_arch="atom core2 pentium-m pentium3 pentiumpro" ;;
	    *2?6[[ad]]?:*:*:*) ax_gcc_arch="corei7-avx corei7 core2 pentium-m pentium3 pentiumpro" ;;
	    *[[1-9a-f]]?6??:*:*:*) ax_gcc_arch="core2 pentiumpro" ;;
	    *6[[3456]]?:*:*:*) ax_gcc_arch="pentium2 pentiumpro" ;;
	    *6a?:*[[01]]:*:*) ax_gcc_arch="pentium2 pentiumpro" ;;
	    *6a?:*[[234]]:*:*) ax_gcc_arch="pentium3 pentiumpro" ;;
	    *6[[9de]]?:*:*:*) ax_gcc_arch="pentium-m pentium3 pentiumpro" ;;
	    *6[[78b]]?:*:*:*) ax_gcc_arch="pentium3 pentiumpro" ;;
	    *6f?:*:*:*) ax_gcc_arch="core2 pentium-m pentium3 pentiumpro" ;;
	    *6??:*:*:*) ax_gcc_arch=pentiumpro ;;
	    *f3[[347]]:*:*:*|*f4[1347]:*:*:*|*f6?:*:*:*)
		case $host_cpu in
	          x86_64*) ax_gcc_arch="nocona pentium4 pentiumpro" ;;
	          *) ax_gcc_arch="prescott pentium4 pentiumpro" ;;
	        esac ;;
	    *f??:*:*:*) ax_gcc_arch="pentium4 pentiumpro";;
          esac ;;
       *:68747541:*:*) # AMD
          case $ax_cv_gcc_x86_cpuid_1 in
	    *5[[67]]?:*:*:*) ax_gcc_arch=k6 ;;
	    *5[[8d]]?:*:*:*) ax_gcc_arch="k6-2 k6" ;;
	    *5[[9]]?:*:*:*) ax_gcc_arch="k6-3 k6" ;;
	    *60?:*:*:*) ax_gcc_arch=k7 ;;
	    *6[[12]]?:*:*:*) ax_gcc_arch="athlon k7" ;;
	    *6[[34]]?:*:*:*) ax_gcc_arch="athlon-tbird k7" ;;
	    *67?:*:*:*) ax_gcc_arch="athlon-4 athlon k7" ;;
	    *6[[68a]]?:*:*:*)
	       AX_GCC_X86_CPUID(0x80000006) # L2 cache size
	       case $ax_cv_gcc_x86_cpuid_0x80000006 in
                 *:*:*[[1-9a-f]]??????:*) # (L2 = ecx >> 16) >= 256
			ax_gcc_arch="athlon-xp athlon-4 athlon k7" ;;
                 *) ax_gcc_arch="athlon-4 athlon k7" ;;
	       esac ;;
	    *5??f??:*:*:*) ax_gcc_arch="btver1 amdfam10 k8" ;;
	    *6??f??:*:*:*) ax_gcc_arch="bdver1 amdfam10 k8" ;;
	    *[[1-9a-f]]??f??:*:*:*) ax_gcc_arch="amdfam10 k8" ;;
	    *f[[4cef8b]]?:*:*:*) ax_gcc_arch="athlon64 k8" ;;
	    *f5?:*:*:*) ax_gcc_arch="opteron k8" ;;
	    *f7?:*:*:*) ax_gcc_arch="athlon-fx opteron k8" ;;
	    *f??:*:*:*) ax_gcc_arch="k8" ;;
          esac ;;
	*:746e6543:*:*) # IDT
	   case $ax_cv_gcc_x86_cpuid_1 in
	     *54?:*:*:*) ax_gcc_arch=winchip-c6 ;;
	     *58?:*:*:*) ax_gcc_arch=winchip2 ;;
	     *6[[78]]?:*:*:*) ax_gcc_arch=c3 ;;
	     *69?:*:*:*) ax_gcc_arch="c3-2 c3" ;;
	   esac ;;
     esac
     if test x"$ax_gcc_arch" = x; then # fallback
	case $host_cpu in
	  i586*) ax_gcc_arch=pentium ;;
	  i686*) ax_gcc_arch=pentiumpro ;;
        esac
     fi
     ;;

  sparc*)
     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])
     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`
     cputype=`echo "$cputype" | tr -d ' -' |tr $as_cr_LETTERS $as_cr_letters`
     case $cputype in
         *ultrasparciv*) ax_gcc_arch="ultrasparc4 ultrasparc3 ultrasparc v9" ;;
         *ultrasparciii*) ax_gcc_arch="ultrasparc3 ultrasparc v9" ;;
         *ultrasparc*) ax_gcc_arch="ultrasparc v9" ;;
         *supersparc*|*tms390z5[[05]]*) ax_gcc_arch="supersparc v8" ;;
         *hypersparc*|*rt62[[056]]*) ax_gcc_arch="hypersparc v8" ;;
         *cypress*) ax_gcc_arch=cypress ;;
     esac ;;

  alphaev5) ax_gcc_arch=ev5 ;;
  alphaev56) ax_gcc_arch=ev56 ;;
  alphapca56) ax_gcc_arch="pca56 ev56" ;;
  alphapca57) ax_gcc_arch="pca57 pca56 ev56" ;;
  alphaev6) ax_gcc_arch=ev6 ;;
  alphaev67) ax_gcc_arch=ev67 ;;
  alphaev68) ax_gcc_arch="ev68 ev67" ;;
  alphaev69) ax_gcc_arch="ev69 ev68 ev67" ;;
  alphaev7) ax_gcc_arch="ev7 ev69 ev68 ev67" ;;
  alphaev79) ax_gcc_arch="ev79 ev7 ev69 ev68 ev67" ;;

  powerpc*)
     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | sed 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d" " -f2) 2> /dev/null`
     cputype=`echo $cputype | sed -e 's/ppc//g;s/ *//g'`
     case $cputype in
       *750*) ax_gcc_arch="750 G3" ;;
       *740[[0-9]]*) ax_gcc_arch="$cputype 7400 G4" ;;
       *74[[4-5]][[0-9]]*) ax_gcc_arch="$cputype 7450 G4" ;;
       *74[[0-9]][[0-9]]*) ax_gcc_arch="$cputype G4" ;;
       *970*) ax_gcc_arch="970 G5 power4";;
       *POWER4*|*power4*|*gq*) ax_gcc_arch="power4 970";;
       *POWER5*|*power5*|*gr*|*gs*) ax_gcc_arch="power5 power4 970";;
       603ev|8240) ax_gcc_arch="$cputype 603e 603";;
       *) ax_gcc_arch=$cputype ;;
     esac
     ax_gcc_arch="$ax_gcc_arch powerpc"
     ;;
esac
fi # not cross-compiling
fi # guess arch

if test "x$ax_gcc_arch" != x -a "x$ax_gcc_arch" != xno; then
for arch in $ax_gcc_arch; do
  if test "x[]m4_default([$1],yes)" = xyes; then # if we require portable code
    flags="-mtune=$arch"
    # -mcpu=$arch and m$arch generate nonportable code on every arch except
    # x86.  And some other arches (e.g. Alpha) don't accept -mtune.  Grrr.
    case $host_cpu in i*86|x86_64*) flags="$flags -mcpu=$arch -m$arch";; esac
  else
    flags="-march=$arch -mcpu=$arch -m$arch"
  fi
  for flag in $flags; do
    AX_CHECK_COMPILE_FLAG($flag, [ax_cv_gcc_archflag=$flag; break])
  done
  test "x$ax_cv_gcc_archflag" = xunknown || break
done
fi

fi # $GCC=yes
])
AC_MSG_CHECKING([for gcc architecture flag])
AC_MSG_RESULT($ax_cv_gcc_archflag)
if test "x$ax_cv_gcc_archflag" = xunknown; then
  m4_default([$3],:)
else
  m4_default([$2], [CFLAGS="$CFLAGS $ax_cv_gcc_archflag"])
fi
])
m4trace:scripts/ax_gcc_x86_cpuid.m4:79: -1- AC_DEFUN([AX_GCC_X86_CPUID], [AC_REQUIRE([AC_PROG_CC])
AC_LANG_PUSH([C])
AC_CACHE_CHECK(for x86 cpuid $1 output, ax_cv_gcc_x86_cpuid_$1,
 [AC_RUN_IFELSE([AC_LANG_PROGRAM([#include <stdio.h>], [
     int op = $1, eax, ebx, ecx, edx;
     FILE *f;
      __asm__("cpuid"
        : "=a" (eax), "=b" (ebx), "=c" (ecx), "=d" (edx)
        : "a" (op));
     f = fopen("conftest_cpuid", "w"); if (!f) return 1;
     fprintf(f, "%x:%x:%x:%x\n", eax, ebx, ecx, edx);
     fclose(f);
     return 0;
])],
     [ax_cv_gcc_x86_cpuid_$1=`cat conftest_cpuid`; rm -f conftest_cpuid],
     [ax_cv_gcc_x86_cpuid_$1=unknown; rm -f conftest_cpuid],
     [ax_cv_gcc_x86_cpuid_$1=unknown])])
AC_LANG_POP([C])
])
m4trace:configure.ac:24: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:24: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:24: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:24: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:24: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:24: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:24: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:24: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:24: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:58: -1- m4_pattern_allow([^LIQUID_SIMDOVERRIDE$])
m4trace:configure.ac:64: -1- m4_pattern_allow([^LIQUID_FFTOVERRIDE$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:67: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:68: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:69: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:70: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:70: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:70: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:71: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^HAVE_STDLIB_H$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^HAVE_MALLOC$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^HAVE_MALLOC$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^malloc$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^HAVE_STDLIB_H$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^HAVE_REALLOC$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^HAVE_REALLOC$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^realloc$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^HAVE_LIBC$])
m4trace:configure.ac:80: -1- m4_pattern_allow([^HAVE_LIBM$])
m4trace:configure.ac:109: -1- m4_pattern_allow([^HAVE_LIBFFTW3F$])
m4trace:configure.ac:112: -1- m4_pattern_allow([^HAVE_LIBFEC$])
m4trace:configure.ac:116: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:117: -1- m4_pattern_allow([^_UINT32_T$])
m4trace:configure.ac:117: -1- m4_pattern_allow([^uint32_t$])
m4trace:configure.ac:118: -1- m4_pattern_allow([^_UINT8_T$])
m4trace:configure.ac:118: -1- m4_pattern_allow([^uint8_t$])
m4trace:configure.ac:121: -1- m4_pattern_allow([^SIZEOF_INT$])
m4trace:configure.ac:122: -1- m4_pattern_allow([^SIZEOF_UNSIGNED_INT$])
m4trace:configure.ac:128: -1- AX_GCC_ARCHFLAG([no], [], [])
m4trace:configure.ac:128: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:128: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:128: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:128: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:128: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:128: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:128: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:128: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:128: -1- AX_GCC_X86_CPUID([0])
m4trace:configure.ac:128: -1- AX_GCC_X86_CPUID([1])
m4trace:configure.ac:128: -1- AX_GCC_X86_CPUID([0x80000006])
m4trace:configure.ac:128: -1- m4_pattern_allow([^PRTDIAG$])
m4trace:configure.ac:128: -1- AX_CHECK_COMPILE_FLAG([$flag], [ax_cv_gcc_archflag=$flag; break])
m4trace:configure.ac:140: -1- m4_pattern_allow([^target$])
m4trace:configure.ac:140: -1- m4_pattern_allow([^target_cpu$])
m4trace:configure.ac:140: -1- m4_pattern_allow([^target_vendor$])
m4trace:configure.ac:140: -1- m4_pattern_allow([^target_os$])
m4trace:configure.ac:151: -1- AX_EXT
m4trace:configure.ac:151: -1- AX_GCC_X86_CPUID([0x00000001])
m4trace:configure.ac:151: -1- m4_pattern_allow([^HAVE_MMX$])
m4trace:configure.ac:151: -1- AX_CHECK_COMPILE_FLAG([-mmmx], [SIMD_FLAGS="$SIMD_FLAGS -mmmx"], [])
m4trace:configure.ac:151: -1- m4_pattern_allow([^HAVE_SSE$])
m4trace:configure.ac:151: -1- AX_CHECK_COMPILE_FLAG([-msse], [SIMD_FLAGS="$SIMD_FLAGS -msse"], [])
m4trace:configure.ac:151: -1- m4_pattern_allow([^HAVE_SSE2$])
m4trace:configure.ac:151: -1- AX_CHECK_COMPILE_FLAG([-msse2], [SIMD_FLAGS="$SIMD_FLAGS -msse2"], [])
m4trace:configure.ac:151: -1- m4_pattern_allow([^HAVE_SSE3$])
m4trace:configure.ac:151: -1- AX_CHECK_COMPILE_FLAG([-msse3], [SIMD_FLAGS="$SIMD_FLAGS -msse3"], [])
m4trace:configure.ac:151: -1- m4_pattern_allow([^HAVE_SSSE3$])
m4trace:configure.ac:151: -1- AX_CHECK_COMPILE_FLAG([-mssse3], [SIMD_FLAGS="$SIMD_FLAGS -mssse3"], [])
m4trace:configure.ac:151: -1- m4_pattern_allow([^HAVE_SSE41$])
m4trace:configure.ac:151: -1- AX_CHECK_COMPILE_FLAG([-msse4.1], [SIMD_FLAGS="$SIMD_FLAGS -msse4.1"], [])
m4trace:configure.ac:151: -1- m4_pattern_allow([^HAVE_SSE42$])
m4trace:configure.ac:151: -1- AX_CHECK_COMPILE_FLAG([-msse4.2], [SIMD_FLAGS="$SIMD_FLAGS -msse4.2"], [])
m4trace:configure.ac:151: -1- m4_pattern_allow([^HAVE_AVX$])
m4trace:configure.ac:151: -1- AX_CHECK_COMPILE_FLAG([-mavx], [SIMD_FLAGS="$SIMD_FLAGS -mavx"], [])
m4trace:configure.ac:151: -1- m4_pattern_allow([^SIMD_FLAGS$])
m4trace:configure.ac:231: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:232: -1- m4_pattern_allow([^MLIBS_DOTPROD$])
m4trace:configure.ac:233: -1- m4_pattern_allow([^MLIBS_VECTOR$])
m4trace:configure.ac:235: -1- m4_pattern_allow([^SH_LIB$])
m4trace:configure.ac:236: -1- m4_pattern_allow([^REBIND$])
m4trace:configure.ac:237: -1- m4_pattern_allow([^ARCH_OPTION$])
m4trace:configure.ac:239: -1- m4_pattern_allow([^DEBUG_OPTION$])
m4trace:configure.ac:240: -1- m4_pattern_allow([^CLIB$])
m4trace:configure.ac:243: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:243: -1- m4_pattern_allow([^LTLIBOBJS$])
